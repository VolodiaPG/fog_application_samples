DOCKER := "podman"
server_port := env_var_or_default("SERVER_PORT", "30080")

_default:
    @just --list

run cluster_ip:
    SERVER_PORT={{server_port}} \
        INFLUX_ADDRESS="127.0.0.1:9086" \
        INFLUX_TOKEN="xowyTh1iGcNAZsZeydESOHKvENvcyPaWg8hUe3tO4vPOw_buZVwOdUrqG3gwV314aYd9SWKHcxlykcQY_rwYVQ==" \
        INFLUX_ORG="faasfog" \
        INFLUX_BUCKET="faasfog" \
        INSTANCE_NAME="iot_emulation" \
        cargo run #--features jaeger

interval period='20' enabled='true':
    curl -X POST --url "http://localhost:{{server_port}}/api/interval?enabled={{enabled}}&intervalMs={{period}}"

pre_commit: check clippy
    cargo fmt

clippy:
	cargo clippy --fix --allow-staged --allow-dirty  -- -A clippy::let_unit_value -D warnings

# Build the project as a docker image
container:
    nix build .#iot_emulation
    {{DOCKER}} load < result

# Push an image to ghcr
_push image user:
    {{DOCKER}} tag {{image}} ghcr.io/{{user}}/{{image}}
    {{DOCKER}} push ghcr.io/{{user}}/{{image}}

# Push docker images to ghcr
ghcr user: container
    just _push iot_emulation:latest {{user}}

check:
    cargo check
    cargo check --features jaeger