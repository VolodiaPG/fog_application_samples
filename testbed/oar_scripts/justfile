_default: oar

oar: (ssh "oar.sh")

watchoar:
    #!/usr/bin/env bash
    until just watch "oar.sh"; do sleep 5; done

add hours: (ssh "add.sh" hours)

# log job_id: (ssh "log.sh" job_id)
log:
    #!/usr/bin/env bash
    # Initialize previous output as empty
    prev_output=""
    highestid=0
    first=0
    index=0

    function dothenasty {
      name=`echo $1 | base64 --decode | jq -r .name`
      id=$2
      if echo $name | grep -q "env"; then
        index=$(( index + 1 ))
    mprocs --server 127.0.0.1:4500 --ctl "{c: batch, cmds: [{c: add-proc, cmd: '$name; until just ssh log.sh "$id" 2>/dev/null; do sleep 2; done'}, {c: select-proc, index: $index}]}"
      fi
    }

    mprocs --server 127.0.0.1:4500&
    name=root
    cmd="until just _ssh tail -f ./logs_campaign/out.logs; do sleep 2; done"
    (sleep 2 && mprocs --server 127.0.0.1:4500 --ctl "{c: batch, cmds: [{c: add-proc, cmd: '$name; $cmd'}, {c: select-proc, index: 0}]}")&
    while true; do
      highest=0
      for oarjob in `just _ssh oarstat -u -f -J 2>/dev/null | jq -r ".[] | @base64"`; do
        id=`echo $oarjob | base64 --decode | jq -r .id`
        if (( id > highestid )); then
          dothenasty $oarjob $id
          if (( id > highest )); then
            highest=$id
          fi
        fi
      done
      if (( highest > highestid )); then
        highestid=$highest
      fi
      sleep 10
    done

devlog: (ssh "devlog.sh")

del: (ssh "del.sh")

clean: (ssh "clean.sh")

_ssh +cmd:
    #!/usr/bin/env bash
    source ../.env
    city=`cd ..; just city`
    ssh -t -o LogLevel=ERROR $city.grid5000.fr {{ cmd }}

[private]
ssh script args="":
    #!/usr/bin/env bash
    set -e
    source ../.env
    city=`cd ..; just city`
    rsync -cazpq --inplace --stats --perms --chmod=u+rwx,g+rwx,o+r {{ script }} $city.grid5000.fr:~/{{ script }} > /dev/null 2>&1
    ssh -o LogLevel=ERROR $city.grid5000.fr ./{{ script }} {{ args }}

[private]
watch script args="":
    #!/usr/bin/env bash
    source ../.env
    city=`cd ..; just city`
    rsync -cazpq --inplace --stats --perms --chmod=u+rwx,g+rwx,o+r {{ script }} $city.grid5000.fr:~/{{ script }} > /dev/null 2>&1
    ssh -t -o LogLevel=ERROR $city.grid5000.fr watch -t -n 10 ./{{ script }} {{ args }}

[private]
show_machine_usage:
    #!/usr/bin/env bash
    set -e
    source ../.env
    city=`cd ..; just city`
    ssh -o LogLevel=ERROR $city.grid5000.fr 'oarstat -f | jq -r ".[] | [.owner, .assigned_resources | length] | @tsv" | sort | awk "{sum[\$1] += \$2} END {for (user in sum) print user, sum[user]}" | sort -rnk2' | \
    awk 'BEGIN {print "User\tMachines"; print "----\t--------"} {printf "%-10s\t%d\n", $1, $2}' | \
    column -t -s $'\t'

watch_machine_usage:
    @watch -n 10 just show_machine_usage
