# Entrypoint, run deploy and then tunnels
_default:
    @just --list

fmt:
    nix --experimental-features "nix-command flakes" fmt .

build target:
    nom build {{target}}

build-vm target: (build target)

update:
    nix flake update --experimental-features "nix-command flakes"

upload city="rennes": (build-vm ".#vm")
    #!/usr/bin/env bash
    set -ex
    temp=/tmp/uploadg5k
    mkdir -p $temp
    cp result/nixos.qcow2 $temp/nixos.qcow2
    chmod u+rwx $temp/nixos.qcow2

    qemu-kvm \
        -cpu max \
        -name nixos \
        -m 4096 \
        -smp 4 \
        -drive cache=writeback,file="$temp/nixos.qcow2",id=drive1,if=none,index=1,werror=report -device virtio-blk-pci,drive=drive1 \
        -net nic,netdev=user.0,model=virtio -netdev user,id=user.0,hostfwd=tcp::2221-:22 \
        -enable-kvm \
        -nographic&
    
    export SSH_CMD="ssh -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no root@localhost -p 2221"
    
    until $SSH_CMD "k3s kubectl get pods -A" 2> /dev/null
    do
        sleep 10
    done

    until $SSH_CMD "k3s kubectl wait pods -n openfaas -l app=gateway --for condition=Ready --timeout=120s" 2> /dev/null
    do
        sleep 10
    done

    until $SSH_CMD "k3s kubectl wait pods -n openfaas -l app=prometheus --for condition=Ready --timeout=120s" 2> /dev/null
    do
        sleep 10
    done

    $SSH_CMD "shutdown 0"

    wait

    rsync -chavzP --stats --perms --chmod=u+rwx,g+rwx,o+rwx $temp/nixos.qcow2 {{city}}.grid5000.fr:~/nixos.qcow2
    
    rm -rf $temp

# build-vm:
#     nix build --print-build-logs --experimental-features "nix-command flakes" .#vm-g5k

_run_vm:
    #!/usr/bin/env bash
    set -ex
    set -ex
    cp result/nixos.qcow2 nixos.qcow2
    temp=nixos.qcow2
    chmod u+rwx $temp

    qemu-kvm \
        -cpu max \
        -name nixos \
        -m 4096 \
        -smp 4 \
        -drive cache=writeback,file="$temp",id=drive1,if=none,index=1,werror=report -device virtio-blk-pci,drive=drive1 \
        -net nic,netdev=user.0,model=virtio -netdev user,id=user.0,hostfwd=tcp::2221-:22 \
        -enable-kvm \
        -nographic&
    
    wait

_openfaas_in_vm:
    #!/usr/bin/env bash
    set -ex
    export SSH_CMD="ssh -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no root@localhost -p 2221"
    
    until $SSH_CMD "k3s kubectl get pods -A" 2> /dev/null
    do
        sleep 10
    done

    # $SSH_CMD "export KUBECONFIG=/etc/rancher/k3s/k3s.yaml \
    #             && k3s kubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml \
    #             && helm repo add openfaas https://openfaas.github.io/faas-netes/ \
    #             && helm repo update \
    #             && helm upgrade openfaas --install openfaas/openfaas --version 12.0.0 \
    #                 --namespace openfaas  \
    #                 --set functionNamespace=openfaas-fn \
    #                 --set generateBasicAuth=true \
    #                 --set prometheus.image=ghcr.io/volodiapg/prometheus:v2.42.0 \
    #                 --set alertmanager.image=ghcr.io/volodiapg/alertmanager:v0.25.0 \
    #                 --set stan.image=ghcr.io/volodiapg/nats-streaming:0.25.3 \
    #                 --set nats.image=ghcr.io/volodiapg/nats:2.9.14 \
    #                 --set nats.metrics.image=ghcr.io/volodiapg/prometheus-nats-exporter:0.10.1"
    
    until $SSH_CMD "k3s kubectl wait pods -n openfaas -l app=gateway --for condition=Ready --timeout=120s" 2> /dev/null
    do
        sleep 10
    done

    until $SSH_CMD "k3s kubectl wait pods -n openfaas -l app=prometheus --for condition=Ready --timeout=120s" 2> /dev/null
    do
        sleep 10
    done
    
    $SSH_CMD "cat /etc/rancher/k3s/k3s.yaml>&1" > vm.kubeconfig 2>&2
    
    $SSH_CMD "k3s kubectl port-forward -n openfaas svc/gateway 8080:8080"&
    $SSH_CMD "k3s kubectl port-forward -n openfaas svc/prometheus 9090:9090"&
    $SSH_CMD -N -L 6443:127.0.0.1:6443&
    $SSH_CMD -N -L 8080:127.0.0.1:8080&
    $SSH_CMD -N -L 9090:127.0.0.1:9090&
    wait

vm:
    mprocs "just _run_vm" "just _openfaas_in_vm"
    
    
    
    