# Entrypoint, run deploy and then tunnels
_default:
    @just --list
    
build-iso:
    nix build .#nixosConfigurations.isoimage.config.system.build.isoImage

build-vm:
    nix build .#qcow2

upload city="nancy":
    rsync --perms --chmod=u+rwx,g+rwx,o+rwx result/nixos*.qcow2 {{city}}.g5k:~/nixos.qcow2
    
vm clean="false":
    #!/usr/bin/env bash
    export NIX_DISK_IMAGE="nixos.vm.qcow2"
    export QEMU_NET_OPTS="hostfwd=tcp::2221-:22" 
    export QEMU_OPTS="-m 4096 -smp 4 -enable-kvm" 
    
    export SSH_CMD="ssh -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no root@localhost -p 2221"
    
    EXISTS=$(! {{clean}} && test -e "$NIX_DISK_IMAGE")

    if ! EXISTS
    then
        qemu-img create -f qcow2 "$NIX_DISK_IMAGE" 4G
    fi

    nixos-rebuild --flake .#vm build-vm 
    ./result/bin/run-*-vm&

    until $SSH_CMD "k3s kubectl get pods -A" 2> /dev/null
    do
        sleep 1
    done
    
    if ! EXISTS
    then
        $SSH_CMD "export KUBECONFIG=/etc/rancher/k3s/k3s.yaml \
                    && k3s kubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml \
                    && helm repo add openfaas https://openfaas.github.io/faas-netes/ \
                    && helm repo update \
                    && helm upgrade openfaas --install openfaas/openfaas \
                        --namespace openfaas  \
                        --set functionNamespace=openfaas-fn \
                        --set generateBasicAuth=true \
                        --set prometheus.image=ghcr.io/volodiapg/prometheus:latest \
                        --set alertmanager.image=ghcr.io/volodiapg/alertmanager:latest \
                        --set stan.image=ghcr.io/volodiapg/nats-streaming:latest \
                        --set nats.metrics.image=ghcr.io/prometheus-nats-exporter:latest"
    fi
    
    until $SSH_CMD "k3s kubectl wait pods -n openfaas -l app=gateway --for condition=Ready --timeout=120s" 2> /dev/null
    do
        sleep 1
    done

    until $SSH_CMD "k3s kubectl wait pods -n openfaas -l app=prometheus --for condition=Ready --timeout=120s" 2> /dev/null
    do
        sleep 1
    done
    
    $SSH_CMD "cat /etc/rancher/k3s/k3s.yaml>&1" > vm.kubeconfig 2>&2
    
    $SSH_CMD "k3s kubectl port-forward -n openfaas svc/gateway 8080:8080"&
    $SSH_CMD "k3s kubectl port-forward -n openfaas svc/prometheus 9090:9090"&
    $SSH_CMD -N -L 6443:127.0.0.1:6443&
    $SSH_CMD -N -L 8080:127.0.0.1:8080&
    $SSH_CMD -N -L 9090:127.0.0.1:9090

    