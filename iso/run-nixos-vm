#! /nix/store/9zm6br2ri10a0b71dll2wrim5bnhg6b6-bash-5.1-p16/bin/bash

set -e

NIX_DISK_IMAGE=$(readlink -f "${NIX_DISK_IMAGE:-./nixos.qcow2}")

if ! test -e "$NIX_DISK_IMAGE"; then
    /nix/store/7qsdq9ys3cg624xjvm02mvm3a0k65lbk-qemu-host-cpu-only-7.0.0/bin/qemu-img create -f qcow2 "$NIX_DISK_IMAGE" \
      1024M
fi

# Create a directory for storing temporary data of the running VM.
if [ -z "$TMPDIR" ] || [ -z "$USE_TMPDIR" ]; then
    TMPDIR=$(mktemp -d nix-vm.XXXXXXXXXX --tmpdir)
fi



# Create a directory for exchanging data with the VM.
mkdir -p "$TMPDIR/xchg"



cd "$TMPDIR"




# Start QEMU.
exec /nix/store/7qsdq9ys3cg624xjvm02mvm3a0k65lbk-qemu-host-cpu-only-7.0.0/bin/qemu-kvm -cpu max \
    -name nixos \
    -m 1024 \
    -smp 1 \
    -device virtio-rng-pci \
    -net nic,netdev=user.0,model=virtio -netdev user,id=user.0,"$QEMU_NET_OPTS" \
    -virtfs local,path=/nix/store,security_model=none,mount_tag=nix-store \
    -virtfs local,path="${SHARED_DIR:-$TMPDIR/xchg}",security_model=none,mount_tag=shared \
    -virtfs local,path="$TMPDIR"/xchg,security_model=none,mount_tag=xchg \
    -drive cache=writeback,file="$NIX_DISK_IMAGE",id=drive1,if=none,index=1,werror=report -device virtio-blk-pci,drive=drive1 \
    -device virtio-keyboard \
    -usb \
    -device usb-tablet,bus=usb-bus.0 \
    -kernel ${NIXPKGS_QEMU_KERNEL_nixos:-/nix/store/m6khafwn91w3ai2mfp1xsxjn6fnxrydx-nixos-system-nixos-22.05.20221003.81a3237/kernel} \
    -initrd /nix/store/m6khafwn91w3ai2mfp1xsxjn6fnxrydx-nixos-system-nixos-22.05.20221003.81a3237/initrd \
    -append "$(cat /nix/store/m6khafwn91w3ai2mfp1xsxjn6fnxrydx-nixos-system-nixos-22.05.20221003.81a3237/kernel-params) init=/nix/store/m6khafwn91w3ai2mfp1xsxjn6fnxrydx-nixos-system-nixos-22.05.20221003.81a3237/init regInfo=/nix/store/9pk55wgnw00a3ib3lqb3pi39gj8r72zh-closure-info/registration console=ttyS0,115200n8 console=tty0 $QEMU_KERNEL_PARAMS" \
    $QEMU_OPTS \
    "$@"
